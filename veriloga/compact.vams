/*
 Copyright 2002, 2003 Tiburon Design Automation, Inc. All rights reserved.
 This software has been provided pursuant to a License Agreement
 containing restrictions on its use.  This software contains
 valuable trade secrets and proprietary information of
 Tiburon Design Automation, Inc. and is protected by law.  It may
 not be copied or distributed in any form or medium, disclosed
 to third parties, reverse engineered or used in any manner not
 provided for in said License Agreement except with the prior
 written authorization from Tiburon Design Automation, Inc.
 
 Useful, common macro definitions and utilities
 $RCSfile: compact.vams,v $ $Revision: 1.1 $ $Date: 2003/09/22 01:36:17 $
*/
 
`ifdef COMPACT_VAMS
`else
`define COMPACT_VAMS 1
// SPICE-specific  different values:
`define SPICE_GMIN 1.0e-12
`define SPICE_K  1.3806226e-23
`define SPICE_Q  1.6021918e-19
 
`define LARGE_REAL 1.0e38
`define MIN_CONDUCTANCE 1.0e-3
`define DEFAULT_TNOM 27
 
/* NOT_GIVEN are codes that are used to detect if a
 * parameter value has been passed (future extensions
 * to Verilog-A should make this obsolete).  */
`define NOT_GIVEN -9.9999e-99
`define INT_NOT_GIVEN -9999999
 
`define N_MINLOG 1.0e-38
`define MAX_EXP 5.834617425e14
`define MIN_EXP 1.713908431e-15
`define EXP_THRESHOLD 34.0
 
`define TRUE  1
`define FALSE 0
 
/* Useful macro for setting Type
      example: `SET_TYPE(P_TYPE, N_TYPE, Type);
      will set variable Type                        */
`define SET_TYPE(n, p, Type) Type = 1; if (p == 1) Type = -1; if (n == 1) Type = 1
 
/* Print out value:
      example: `DEBUG_STROBE("myVariable", myVariable); */
`define DEBUG_STROBE(xName, x) \
`ifdef DEBUG \
      $strobe("\n%s = %g", xName, 1.0*x) \
`else \
      $strobe("") \
`endif
 
`endif